// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: libsvm.proto

package com.tracholar.protobuf;

public final class Libsvm {
  private Libsvm() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LabelPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.LabelPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint.Point> 
        getFeatureList();
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    com.tracholar.protobuf.Libsvm.LabelPoint.Point getFeature(int index);
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    int getFeatureCount();
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    java.util.List<? extends com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder> 
        getFeatureOrBuilderList();
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder getFeatureOrBuilder(
        int index);

    /**
     * <code>optional float label = 2;</code>
     */
    boolean hasLabel();
    /**
     * <code>optional float label = 2;</code>
     */
    float getLabel();

    /**
     * <code>optional string rowid = 3;</code>
     */
    boolean hasRowid();
    /**
     * <code>optional string rowid = 3;</code>
     */
    java.lang.String getRowid();
    /**
     * <code>optional string rowid = 3;</code>
     */
    com.google.protobuf.ByteString
        getRowidBytes();
  }
  /**
   * Protobuf type {@code tutorial.LabelPoint}
   */
  public  static final class LabelPoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.LabelPoint)
      LabelPointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LabelPoint.newBuilder() to construct.
    private LabelPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LabelPoint() {
      feature_ = java.util.Collections.emptyList();
      label_ = 0F;
      rowid_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LabelPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                feature_ = new java.util.ArrayList<com.tracholar.protobuf.Libsvm.LabelPoint.Point>();
                mutable_bitField0_ |= 0x00000001;
              }
              feature_.add(
                  input.readMessage(com.tracholar.protobuf.Libsvm.LabelPoint.Point.PARSER, extensionRegistry));
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              label_ = input.readFloat();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              rowid_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          feature_ = java.util.Collections.unmodifiableList(feature_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tracholar.protobuf.Libsvm.LabelPoint.class, com.tracholar.protobuf.Libsvm.LabelPoint.Builder.class);
    }

    public interface PointOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tutorial.LabelPoint.Point)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * idx
       * </pre>
       *
       * <code>required int32 x = 1;</code>
       */
      boolean hasX();
      /**
       * <pre>
       * idx
       * </pre>
       *
       * <code>required int32 x = 1;</code>
       */
      int getX();

      /**
       * <pre>
       * value
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      boolean hasY();
      /**
       * <pre>
       * value
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      float getY();

      /**
       * <pre>
       * field
       * </pre>
       *
       * <code>optional int32 f = 3;</code>
       */
      boolean hasF();
      /**
       * <pre>
       * field
       * </pre>
       *
       * <code>optional int32 f = 3;</code>
       */
      int getF();
    }
    /**
     * Protobuf type {@code tutorial.LabelPoint.Point}
     */
    public  static final class Point extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tutorial.LabelPoint.Point)
        PointOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Point.newBuilder() to construct.
      private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Point() {
        x_ = 0;
        y_ = 0F;
        f_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Point(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                x_ = input.readInt32();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                y_ = input.readFloat();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                f_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_Point_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tracholar.protobuf.Libsvm.LabelPoint.Point.class, com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder.class);
      }

      private int bitField0_;
      public static final int X_FIELD_NUMBER = 1;
      private int x_;
      /**
       * <pre>
       * idx
       * </pre>
       *
       * <code>required int32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * idx
       * </pre>
       *
       * <code>required int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private float y_;
      /**
       * <pre>
       * value
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * value
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public float getY() {
        return y_;
      }

      public static final int F_FIELD_NUMBER = 3;
      private int f_;
      /**
       * <pre>
       * field
       * </pre>
       *
       * <code>optional int32 f = 3;</code>
       */
      public boolean hasF() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * field
       * </pre>
       *
       * <code>optional int32 f = 3;</code>
       */
      public int getF() {
        return f_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasX()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasY()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, f_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, f_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.tracholar.protobuf.Libsvm.LabelPoint.Point)) {
          return super.equals(obj);
        }
        com.tracholar.protobuf.Libsvm.LabelPoint.Point other = (com.tracholar.protobuf.Libsvm.LabelPoint.Point) obj;

        boolean result = true;
        result = result && (hasX() == other.hasX());
        if (hasX()) {
          result = result && (getX()
              == other.getX());
        }
        result = result && (hasY() == other.hasY());
        if (hasY()) {
          result = result && (
              java.lang.Float.floatToIntBits(getY())
              == java.lang.Float.floatToIntBits(
                  other.getY()));
        }
        result = result && (hasF() == other.hasF());
        if (hasF()) {
          result = result && (getF()
              == other.getF());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasX()) {
          hash = (37 * hash) + X_FIELD_NUMBER;
          hash = (53 * hash) + getX();
        }
        if (hasY()) {
          hash = (37 * hash) + Y_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getY());
        }
        if (hasF()) {
          hash = (37 * hash) + F_FIELD_NUMBER;
          hash = (53 * hash) + getF();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.tracholar.protobuf.Libsvm.LabelPoint.Point prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tutorial.LabelPoint.Point}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tutorial.LabelPoint.Point)
          com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_Point_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_Point_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tracholar.protobuf.Libsvm.LabelPoint.Point.class, com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder.class);
        }

        // Construct using com.tracholar.protobuf.Libsvm.LabelPoint.Point.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          x_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          f_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_Point_descriptor;
        }

        @java.lang.Override
        public com.tracholar.protobuf.Libsvm.LabelPoint.Point getDefaultInstanceForType() {
          return com.tracholar.protobuf.Libsvm.LabelPoint.Point.getDefaultInstance();
        }

        @java.lang.Override
        public com.tracholar.protobuf.Libsvm.LabelPoint.Point build() {
          com.tracholar.protobuf.Libsvm.LabelPoint.Point result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.tracholar.protobuf.Libsvm.LabelPoint.Point buildPartial() {
          com.tracholar.protobuf.Libsvm.LabelPoint.Point result = new com.tracholar.protobuf.Libsvm.LabelPoint.Point(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.x_ = x_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.y_ = y_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.f_ = f_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.tracholar.protobuf.Libsvm.LabelPoint.Point) {
            return mergeFrom((com.tracholar.protobuf.Libsvm.LabelPoint.Point)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.tracholar.protobuf.Libsvm.LabelPoint.Point other) {
          if (other == com.tracholar.protobuf.Libsvm.LabelPoint.Point.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasF()) {
            setF(other.getF());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasX()) {
            return false;
          }
          if (!hasY()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.tracholar.protobuf.Libsvm.LabelPoint.Point parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.tracholar.protobuf.Libsvm.LabelPoint.Point) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int x_ ;
        /**
         * <pre>
         * idx
         * </pre>
         *
         * <code>required int32 x = 1;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * idx
         * </pre>
         *
         * <code>required int32 x = 1;</code>
         */
        public int getX() {
          return x_;
        }
        /**
         * <pre>
         * idx
         * </pre>
         *
         * <code>required int32 x = 1;</code>
         */
        public Builder setX(int value) {
          bitField0_ |= 0x00000001;
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * idx
         * </pre>
         *
         * <code>required int32 x = 1;</code>
         */
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0;
          onChanged();
          return this;
        }

        private float y_ ;
        /**
         * <pre>
         * value
         * </pre>
         *
         * <code>required float y = 2;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * value
         * </pre>
         *
         * <code>required float y = 2;</code>
         */
        public float getY() {
          return y_;
        }
        /**
         * <pre>
         * value
         * </pre>
         *
         * <code>required float y = 2;</code>
         */
        public Builder setY(float value) {
          bitField0_ |= 0x00000002;
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * value
         * </pre>
         *
         * <code>required float y = 2;</code>
         */
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0F;
          onChanged();
          return this;
        }

        private int f_ ;
        /**
         * <pre>
         * field
         * </pre>
         *
         * <code>optional int32 f = 3;</code>
         */
        public boolean hasF() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         * field
         * </pre>
         *
         * <code>optional int32 f = 3;</code>
         */
        public int getF() {
          return f_;
        }
        /**
         * <pre>
         * field
         * </pre>
         *
         * <code>optional int32 f = 3;</code>
         */
        public Builder setF(int value) {
          bitField0_ |= 0x00000004;
          f_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * field
         * </pre>
         *
         * <code>optional int32 f = 3;</code>
         */
        public Builder clearF() {
          bitField0_ = (bitField0_ & ~0x00000004);
          f_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tutorial.LabelPoint.Point)
      }

      // @@protoc_insertion_point(class_scope:tutorial.LabelPoint.Point)
      private static final com.tracholar.protobuf.Libsvm.LabelPoint.Point DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.tracholar.protobuf.Libsvm.LabelPoint.Point();
      }

      public static com.tracholar.protobuf.Libsvm.LabelPoint.Point getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Point>
          PARSER = new com.google.protobuf.AbstractParser<Point>() {
        @java.lang.Override
        public Point parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Point(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Point> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Point> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.tracholar.protobuf.Libsvm.LabelPoint.Point getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FEATURE_FIELD_NUMBER = 1;
    private java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint.Point> feature_;
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    public java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint.Point> getFeatureList() {
      return feature_;
    }
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    public java.util.List<? extends com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder> 
        getFeatureOrBuilderList() {
      return feature_;
    }
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    public int getFeatureCount() {
      return feature_.size();
    }
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    public com.tracholar.protobuf.Libsvm.LabelPoint.Point getFeature(int index) {
      return feature_.get(index);
    }
    /**
     * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
     */
    public com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder getFeatureOrBuilder(
        int index) {
      return feature_.get(index);
    }

    public static final int LABEL_FIELD_NUMBER = 2;
    private float label_;
    /**
     * <code>optional float label = 2;</code>
     */
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float label = 2;</code>
     */
    public float getLabel() {
      return label_;
    }

    public static final int ROWID_FIELD_NUMBER = 3;
    private volatile java.lang.Object rowid_;
    /**
     * <code>optional string rowid = 3;</code>
     */
    public boolean hasRowid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string rowid = 3;</code>
     */
    public java.lang.String getRowid() {
      java.lang.Object ref = rowid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rowid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string rowid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getRowidBytes() {
      java.lang.Object ref = rowid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rowid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFeatureCount(); i++) {
        if (!getFeature(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < feature_.size(); i++) {
        output.writeMessage(1, feature_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(2, label_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, rowid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < feature_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, feature_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, label_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, rowid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tracholar.protobuf.Libsvm.LabelPoint)) {
        return super.equals(obj);
      }
      com.tracholar.protobuf.Libsvm.LabelPoint other = (com.tracholar.protobuf.Libsvm.LabelPoint) obj;

      boolean result = true;
      result = result && getFeatureList()
          .equals(other.getFeatureList());
      result = result && (hasLabel() == other.hasLabel());
      if (hasLabel()) {
        result = result && (
            java.lang.Float.floatToIntBits(getLabel())
            == java.lang.Float.floatToIntBits(
                other.getLabel()));
      }
      result = result && (hasRowid() == other.hasRowid());
      if (hasRowid()) {
        result = result && getRowid()
            .equals(other.getRowid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFeatureCount() > 0) {
        hash = (37 * hash) + FEATURE_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureList().hashCode();
      }
      if (hasLabel()) {
        hash = (37 * hash) + LABEL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLabel());
      }
      if (hasRowid()) {
        hash = (37 * hash) + ROWID_FIELD_NUMBER;
        hash = (53 * hash) + getRowid().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tracholar.protobuf.Libsvm.LabelPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tracholar.protobuf.Libsvm.LabelPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.LabelPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.LabelPoint)
        com.tracholar.protobuf.Libsvm.LabelPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tracholar.protobuf.Libsvm.LabelPoint.class, com.tracholar.protobuf.Libsvm.LabelPoint.Builder.class);
      }

      // Construct using com.tracholar.protobuf.Libsvm.LabelPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFeatureFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (featureBuilder_ == null) {
          feature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          featureBuilder_.clear();
        }
        label_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        rowid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_LabelPoint_descriptor;
      }

      @java.lang.Override
      public com.tracholar.protobuf.Libsvm.LabelPoint getDefaultInstanceForType() {
        return com.tracholar.protobuf.Libsvm.LabelPoint.getDefaultInstance();
      }

      @java.lang.Override
      public com.tracholar.protobuf.Libsvm.LabelPoint build() {
        com.tracholar.protobuf.Libsvm.LabelPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tracholar.protobuf.Libsvm.LabelPoint buildPartial() {
        com.tracholar.protobuf.Libsvm.LabelPoint result = new com.tracholar.protobuf.Libsvm.LabelPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (featureBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            feature_ = java.util.Collections.unmodifiableList(feature_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.feature_ = feature_;
        } else {
          result.feature_ = featureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.label_ = label_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rowid_ = rowid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tracholar.protobuf.Libsvm.LabelPoint) {
          return mergeFrom((com.tracholar.protobuf.Libsvm.LabelPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tracholar.protobuf.Libsvm.LabelPoint other) {
        if (other == com.tracholar.protobuf.Libsvm.LabelPoint.getDefaultInstance()) return this;
        if (featureBuilder_ == null) {
          if (!other.feature_.isEmpty()) {
            if (feature_.isEmpty()) {
              feature_ = other.feature_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFeatureIsMutable();
              feature_.addAll(other.feature_);
            }
            onChanged();
          }
        } else {
          if (!other.feature_.isEmpty()) {
            if (featureBuilder_.isEmpty()) {
              featureBuilder_.dispose();
              featureBuilder_ = null;
              feature_ = other.feature_;
              bitField0_ = (bitField0_ & ~0x00000001);
              featureBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFeatureFieldBuilder() : null;
            } else {
              featureBuilder_.addAllMessages(other.feature_);
            }
          }
        }
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        if (other.hasRowid()) {
          bitField0_ |= 0x00000004;
          rowid_ = other.rowid_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getFeatureCount(); i++) {
          if (!getFeature(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tracholar.protobuf.Libsvm.LabelPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tracholar.protobuf.Libsvm.LabelPoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint.Point> feature_ =
        java.util.Collections.emptyList();
      private void ensureFeatureIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          feature_ = new java.util.ArrayList<com.tracholar.protobuf.Libsvm.LabelPoint.Point>(feature_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tracholar.protobuf.Libsvm.LabelPoint.Point, com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder, com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder> featureBuilder_;

      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint.Point> getFeatureList() {
        if (featureBuilder_ == null) {
          return java.util.Collections.unmodifiableList(feature_);
        } else {
          return featureBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public int getFeatureCount() {
        if (featureBuilder_ == null) {
          return feature_.size();
        } else {
          return featureBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.Point getFeature(int index) {
        if (featureBuilder_ == null) {
          return feature_.get(index);
        } else {
          return featureBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder setFeature(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint.Point value) {
        if (featureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureIsMutable();
          feature_.set(index, value);
          onChanged();
        } else {
          featureBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder setFeature(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder builderForValue) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.set(index, builderForValue.build());
          onChanged();
        } else {
          featureBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder addFeature(com.tracholar.protobuf.Libsvm.LabelPoint.Point value) {
        if (featureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureIsMutable();
          feature_.add(value);
          onChanged();
        } else {
          featureBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder addFeature(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint.Point value) {
        if (featureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureIsMutable();
          feature_.add(index, value);
          onChanged();
        } else {
          featureBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder addFeature(
          com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder builderForValue) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.add(builderForValue.build());
          onChanged();
        } else {
          featureBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder addFeature(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder builderForValue) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.add(index, builderForValue.build());
          onChanged();
        } else {
          featureBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder addAllFeature(
          java.lang.Iterable<? extends com.tracholar.protobuf.Libsvm.LabelPoint.Point> values) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, feature_);
          onChanged();
        } else {
          featureBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder clearFeature() {
        if (featureBuilder_ == null) {
          feature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          featureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public Builder removeFeature(int index) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.remove(index);
          onChanged();
        } else {
          featureBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder getFeatureBuilder(
          int index) {
        return getFeatureFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder getFeatureOrBuilder(
          int index) {
        if (featureBuilder_ == null) {
          return feature_.get(index);  } else {
          return featureBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public java.util.List<? extends com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder> 
           getFeatureOrBuilderList() {
        if (featureBuilder_ != null) {
          return featureBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(feature_);
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder addFeatureBuilder() {
        return getFeatureFieldBuilder().addBuilder(
            com.tracholar.protobuf.Libsvm.LabelPoint.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder addFeatureBuilder(
          int index) {
        return getFeatureFieldBuilder().addBuilder(
            index, com.tracholar.protobuf.Libsvm.LabelPoint.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.LabelPoint.Point feature = 1;</code>
       */
      public java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder> 
           getFeatureBuilderList() {
        return getFeatureFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tracholar.protobuf.Libsvm.LabelPoint.Point, com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder, com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder> 
          getFeatureFieldBuilder() {
        if (featureBuilder_ == null) {
          featureBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tracholar.protobuf.Libsvm.LabelPoint.Point, com.tracholar.protobuf.Libsvm.LabelPoint.Point.Builder, com.tracholar.protobuf.Libsvm.LabelPoint.PointOrBuilder>(
                  feature_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          feature_ = null;
        }
        return featureBuilder_;
      }

      private float label_ ;
      /**
       * <code>optional float label = 2;</code>
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float label = 2;</code>
       */
      public float getLabel() {
        return label_;
      }
      /**
       * <code>optional float label = 2;</code>
       */
      public Builder setLabel(float value) {
        bitField0_ |= 0x00000002;
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float label = 2;</code>
       */
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        label_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object rowid_ = "";
      /**
       * <code>optional string rowid = 3;</code>
       */
      public boolean hasRowid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string rowid = 3;</code>
       */
      public java.lang.String getRowid() {
        java.lang.Object ref = rowid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            rowid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string rowid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getRowidBytes() {
        java.lang.Object ref = rowid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rowid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string rowid = 3;</code>
       */
      public Builder setRowid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rowid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string rowid = 3;</code>
       */
      public Builder clearRowid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rowid_ = getDefaultInstance().getRowid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string rowid = 3;</code>
       */
      public Builder setRowidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rowid_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.LabelPoint)
    }

    // @@protoc_insertion_point(class_scope:tutorial.LabelPoint)
    private static final com.tracholar.protobuf.Libsvm.LabelPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tracholar.protobuf.Libsvm.LabelPoint();
    }

    public static com.tracholar.protobuf.Libsvm.LabelPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LabelPoint>
        PARSER = new com.google.protobuf.AbstractParser<LabelPoint>() {
      @java.lang.Override
      public LabelPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LabelPoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LabelPoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LabelPoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tracholar.protobuf.Libsvm.LabelPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.DataSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint> 
        getLpList();
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    com.tracholar.protobuf.Libsvm.LabelPoint getLp(int index);
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    int getLpCount();
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    java.util.List<? extends com.tracholar.protobuf.Libsvm.LabelPointOrBuilder> 
        getLpOrBuilderList();
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    com.tracholar.protobuf.Libsvm.LabelPointOrBuilder getLpOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tutorial.DataSet}
   */
  public  static final class DataSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.DataSet)
      DataSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataSet.newBuilder() to construct.
    private DataSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataSet() {
      lp_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                lp_ = new java.util.ArrayList<com.tracholar.protobuf.Libsvm.LabelPoint>();
                mutable_bitField0_ |= 0x00000001;
              }
              lp_.add(
                  input.readMessage(com.tracholar.protobuf.Libsvm.LabelPoint.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          lp_ = java.util.Collections.unmodifiableList(lp_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tracholar.protobuf.Libsvm.internal_static_tutorial_DataSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tracholar.protobuf.Libsvm.internal_static_tutorial_DataSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tracholar.protobuf.Libsvm.DataSet.class, com.tracholar.protobuf.Libsvm.DataSet.Builder.class);
    }

    public static final int LP_FIELD_NUMBER = 1;
    private java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint> lp_;
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    public java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint> getLpList() {
      return lp_;
    }
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    public java.util.List<? extends com.tracholar.protobuf.Libsvm.LabelPointOrBuilder> 
        getLpOrBuilderList() {
      return lp_;
    }
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    public int getLpCount() {
      return lp_.size();
    }
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    public com.tracholar.protobuf.Libsvm.LabelPoint getLp(int index) {
      return lp_.get(index);
    }
    /**
     * <code>repeated .tutorial.LabelPoint lp = 1;</code>
     */
    public com.tracholar.protobuf.Libsvm.LabelPointOrBuilder getLpOrBuilder(
        int index) {
      return lp_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getLpCount(); i++) {
        if (!getLp(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < lp_.size(); i++) {
        output.writeMessage(1, lp_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < lp_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, lp_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tracholar.protobuf.Libsvm.DataSet)) {
        return super.equals(obj);
      }
      com.tracholar.protobuf.Libsvm.DataSet other = (com.tracholar.protobuf.Libsvm.DataSet) obj;

      boolean result = true;
      result = result && getLpList()
          .equals(other.getLpList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLpCount() > 0) {
        hash = (37 * hash) + LP_FIELD_NUMBER;
        hash = (53 * hash) + getLpList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tracholar.protobuf.Libsvm.DataSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tracholar.protobuf.Libsvm.DataSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.DataSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.DataSet)
        com.tracholar.protobuf.Libsvm.DataSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_DataSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_DataSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tracholar.protobuf.Libsvm.DataSet.class, com.tracholar.protobuf.Libsvm.DataSet.Builder.class);
      }

      // Construct using com.tracholar.protobuf.Libsvm.DataSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLpFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (lpBuilder_ == null) {
          lp_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          lpBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tracholar.protobuf.Libsvm.internal_static_tutorial_DataSet_descriptor;
      }

      @java.lang.Override
      public com.tracholar.protobuf.Libsvm.DataSet getDefaultInstanceForType() {
        return com.tracholar.protobuf.Libsvm.DataSet.getDefaultInstance();
      }

      @java.lang.Override
      public com.tracholar.protobuf.Libsvm.DataSet build() {
        com.tracholar.protobuf.Libsvm.DataSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tracholar.protobuf.Libsvm.DataSet buildPartial() {
        com.tracholar.protobuf.Libsvm.DataSet result = new com.tracholar.protobuf.Libsvm.DataSet(this);
        int from_bitField0_ = bitField0_;
        if (lpBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            lp_ = java.util.Collections.unmodifiableList(lp_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.lp_ = lp_;
        } else {
          result.lp_ = lpBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tracholar.protobuf.Libsvm.DataSet) {
          return mergeFrom((com.tracholar.protobuf.Libsvm.DataSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tracholar.protobuf.Libsvm.DataSet other) {
        if (other == com.tracholar.protobuf.Libsvm.DataSet.getDefaultInstance()) return this;
        if (lpBuilder_ == null) {
          if (!other.lp_.isEmpty()) {
            if (lp_.isEmpty()) {
              lp_ = other.lp_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLpIsMutable();
              lp_.addAll(other.lp_);
            }
            onChanged();
          }
        } else {
          if (!other.lp_.isEmpty()) {
            if (lpBuilder_.isEmpty()) {
              lpBuilder_.dispose();
              lpBuilder_ = null;
              lp_ = other.lp_;
              bitField0_ = (bitField0_ & ~0x00000001);
              lpBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLpFieldBuilder() : null;
            } else {
              lpBuilder_.addAllMessages(other.lp_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getLpCount(); i++) {
          if (!getLp(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tracholar.protobuf.Libsvm.DataSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tracholar.protobuf.Libsvm.DataSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint> lp_ =
        java.util.Collections.emptyList();
      private void ensureLpIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          lp_ = new java.util.ArrayList<com.tracholar.protobuf.Libsvm.LabelPoint>(lp_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tracholar.protobuf.Libsvm.LabelPoint, com.tracholar.protobuf.Libsvm.LabelPoint.Builder, com.tracholar.protobuf.Libsvm.LabelPointOrBuilder> lpBuilder_;

      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint> getLpList() {
        if (lpBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lp_);
        } else {
          return lpBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public int getLpCount() {
        if (lpBuilder_ == null) {
          return lp_.size();
        } else {
          return lpBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint getLp(int index) {
        if (lpBuilder_ == null) {
          return lp_.get(index);
        } else {
          return lpBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder setLp(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint value) {
        if (lpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLpIsMutable();
          lp_.set(index, value);
          onChanged();
        } else {
          lpBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder setLp(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint.Builder builderForValue) {
        if (lpBuilder_ == null) {
          ensureLpIsMutable();
          lp_.set(index, builderForValue.build());
          onChanged();
        } else {
          lpBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder addLp(com.tracholar.protobuf.Libsvm.LabelPoint value) {
        if (lpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLpIsMutable();
          lp_.add(value);
          onChanged();
        } else {
          lpBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder addLp(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint value) {
        if (lpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLpIsMutable();
          lp_.add(index, value);
          onChanged();
        } else {
          lpBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder addLp(
          com.tracholar.protobuf.Libsvm.LabelPoint.Builder builderForValue) {
        if (lpBuilder_ == null) {
          ensureLpIsMutable();
          lp_.add(builderForValue.build());
          onChanged();
        } else {
          lpBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder addLp(
          int index, com.tracholar.protobuf.Libsvm.LabelPoint.Builder builderForValue) {
        if (lpBuilder_ == null) {
          ensureLpIsMutable();
          lp_.add(index, builderForValue.build());
          onChanged();
        } else {
          lpBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder addAllLp(
          java.lang.Iterable<? extends com.tracholar.protobuf.Libsvm.LabelPoint> values) {
        if (lpBuilder_ == null) {
          ensureLpIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lp_);
          onChanged();
        } else {
          lpBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder clearLp() {
        if (lpBuilder_ == null) {
          lp_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          lpBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public Builder removeLp(int index) {
        if (lpBuilder_ == null) {
          ensureLpIsMutable();
          lp_.remove(index);
          onChanged();
        } else {
          lpBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.Builder getLpBuilder(
          int index) {
        return getLpFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPointOrBuilder getLpOrBuilder(
          int index) {
        if (lpBuilder_ == null) {
          return lp_.get(index);  } else {
          return lpBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public java.util.List<? extends com.tracholar.protobuf.Libsvm.LabelPointOrBuilder> 
           getLpOrBuilderList() {
        if (lpBuilder_ != null) {
          return lpBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lp_);
        }
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.Builder addLpBuilder() {
        return getLpFieldBuilder().addBuilder(
            com.tracholar.protobuf.Libsvm.LabelPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public com.tracholar.protobuf.Libsvm.LabelPoint.Builder addLpBuilder(
          int index) {
        return getLpFieldBuilder().addBuilder(
            index, com.tracholar.protobuf.Libsvm.LabelPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.LabelPoint lp = 1;</code>
       */
      public java.util.List<com.tracholar.protobuf.Libsvm.LabelPoint.Builder> 
           getLpBuilderList() {
        return getLpFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tracholar.protobuf.Libsvm.LabelPoint, com.tracholar.protobuf.Libsvm.LabelPoint.Builder, com.tracholar.protobuf.Libsvm.LabelPointOrBuilder> 
          getLpFieldBuilder() {
        if (lpBuilder_ == null) {
          lpBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tracholar.protobuf.Libsvm.LabelPoint, com.tracholar.protobuf.Libsvm.LabelPoint.Builder, com.tracholar.protobuf.Libsvm.LabelPointOrBuilder>(
                  lp_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          lp_ = null;
        }
        return lpBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.DataSet)
    }

    // @@protoc_insertion_point(class_scope:tutorial.DataSet)
    private static final com.tracholar.protobuf.Libsvm.DataSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tracholar.protobuf.Libsvm.DataSet();
    }

    public static com.tracholar.protobuf.Libsvm.DataSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DataSet>
        PARSER = new com.google.protobuf.AbstractParser<DataSet>() {
      @java.lang.Override
      public DataSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tracholar.protobuf.Libsvm.DataSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_LabelPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_LabelPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_LabelPoint_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_LabelPoint_Point_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_DataSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_DataSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014libsvm.proto\022\010tutorial\"\201\001\n\nLabelPoint\022" +
      "+\n\007feature\030\001 \003(\0132\032.tutorial.LabelPoint.P" +
      "oint\022\r\n\005label\030\002 \001(\002\022\r\n\005rowid\030\003 \001(\t\032(\n\005Po" +
      "int\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\002\022\t\n\001f\030\003 \001(\005\"+\n\007" +
      "DataSet\022 \n\002lp\030\001 \003(\0132\024.tutorial.LabelPoin" +
      "tB \n\026com.tracholar.protobufB\006Libsvm"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tutorial_LabelPoint_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tutorial_LabelPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_LabelPoint_descriptor,
        new java.lang.String[] { "Feature", "Label", "Rowid", });
    internal_static_tutorial_LabelPoint_Point_descriptor =
      internal_static_tutorial_LabelPoint_descriptor.getNestedTypes().get(0);
    internal_static_tutorial_LabelPoint_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_LabelPoint_Point_descriptor,
        new java.lang.String[] { "X", "Y", "F", });
    internal_static_tutorial_DataSet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tutorial_DataSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_DataSet_descriptor,
        new java.lang.String[] { "Lp", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
